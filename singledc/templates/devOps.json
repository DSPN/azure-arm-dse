{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "publicIPResourceId": {
      "type": "string"
    },
    "clusterName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "datacenterName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "vmSize": {
      "type": "string"
    },
    "nodeCount": {
      "type": "int"
    },
    "diskSize": {
      "type": "int"
    },
    "osSettings": {
      "type": "object"
    },
    "vnetName": {
      "type": "string"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet to deploy into"
      }
    },
    "vnetRG": {
      "type": "string",
      "metadata": {
        "description": "Resource group of vnet if different"
      }
    },
    "privateIPAddress": {
      "type": "string",
      "defaultValue": "10.0.0.4"
    },
    "publicIpOnDevOps": {
      "type": "string"
    },
    "subnetCIDR": {
      "type": "string"
    },
    "deployOPSC": {
      "type": "string"
    },
    "nicOffset": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "offset for nic  and VMs."
      }
    }
  },
  "variables": {
    "subnetId": "[resourceId(parameters('vnetRG'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "devOpsNSG",
      "condition": "[equals(parameters('publicIpOnDevOps'), 'yes')]",
      "location": "[parameters('location')]",
      "apiVersion": "2017-11-01",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
           {
            "name": "OpsC",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8888",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Agent",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "61619-61620",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "OpsCVnet",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8888",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1110,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-11-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "devops-nic",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.Network/networkSecurityGroups/devOpsNSG"
      ],
      "properties": {
        "networkSecurityGroup": "[if(equals(parameters('publicIpOnDevOps'), 'yes') , json(concat('{\"id\": \"', resourceId('Microsoft.Network/networkSecurityGroups', 'devOpsNSG'),'\"}')), json('null'))]",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": "[if(equals(parameters('publicIpOnDevOps'), 'yes') , json(concat('{\"id\": \"', parameters('publicIPResourceID'),'\"}')), json('null'))]",
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateIPAddress')]",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "devOps",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.Network/networkInterfaces/devops-nic"
      ],
      "plan": {
        "name": "[parameters('osSettings').imageReference.sku]",
        "publisher": "[parameters('osSettings').imageReference.publisher]",
        "product": "[parameters('osSettings').imageReference.offer]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "devOps",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'devops-nic')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "devOps/installdevops",
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.Compute/virtualMachines/devOps"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[parameters('osSettings').scripts]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash devOps.sh ',  parameters('subnetCIDR'), ' ', parameters('nodeCount'), ' ', parameters('vmSize'), ' ', parameters('datacenterName'), ' ', parameters('diskSize'),' ', parameters('clusterName'),' ', parameters('deployOPSC'),' ', parameters('nicOffset'))]"
        }
      }
    }
    
  ],
  "outputs": {

  }
}
