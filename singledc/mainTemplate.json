{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "nodeCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 3,
      "maxValue": 32,
      "metadata": {
        "description": "Number of virtual machines to provision for the cluster"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D8s_v3",
      "metadata": {
        "description": "Size of virtual machine to provision for the cluster"
      }
    },
    "diskSize": {
      "type": "int",
      "defaultValue": 2048,
      "metadata": {
        "description": "Size (GB) of extenal data volume for each node. If 0, ephemeral disk will be used for data."
      }
    },
    "devOpsvmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of devOps VM"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "DSECluster",
      "metadata": {
        "description": "Name of DSE cluster"
      }
    },
    "datacenterName": {
      "type": "string",
      "defaultValue": "dc0",
      "metadata": {
        "description": "Name of DSE datacenter, and namespace for VMs"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin user name for the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the virtual machines"
      }
    },
    "publicIpOnNodes": {
      "type": "string",
      "metadata": {
        "description": "Create and use public ip's on node vm's"
      },
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ]
    },
    "publicIpOnDevOps": {
      "type": "string",
      "metadata": {
        "description": "Create and use public ip's on dev node vm's"
      },
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ]
    },
    "vnetNeworExisting": {
      "type": "string",
      "metadata": {
        "description": "Create a new vNet or use existing"
      },
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ]
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet",
      "metadata": {
        "description": "Name of vnet."
      }
    },
    "vnetCIDR": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "CIDR of vnet."
      }
    },
    "vnetRG": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group of vnet if different"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Name of subnet."
      }
    },
    "subnetCIDR": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "CIDR of subnet."
      }
    },
    "dbSubnetStartAddress": {
      "type": "string",
      "defaultValue": "10.0.0.5",
      "metadata": {
          "description": "Start IP address in the subnet for the VMs"
      }
    },
    "privateIPAddress": {
      "type": "string",
      "defaultValue": "10.0.0.4"
    },
    "_artifactsLocation": {
        "type": "string",
        "metadata": {
           "description": "The base URL for dependent assets"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
          },
          "defaultValue": ""
      },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "DSE SKU (VM image) for node deployment."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be deployed."
      }
    },
    "deployOPSC": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "deploy the OPSC tarball or not"
      }
    },
    "nicOffset": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "offset of nic and VMs"
      }  
    }
  },
  "variables": {
    "createNodesTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('createNodes.json', parameters('_artifactsLocationSasToken')))]",
    "devOpsPubIPTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('devOpsPublicIP.json', parameters('_artifactsLocationSasToken')))]",
    "devOpsTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('devOps.json', parameters('_artifactsLocationSasToken')))]",
    "uniqueString": "[uniqueString(resourceGroup().id, deployment().name)]",
    "devOpsDomainName": "[concat('devops',variables('uniqueString'))]",
    "osSettings": {
      "imageReference": {
        "publisher": "datastax",
        "offer": "datastax-enterprise-preview",
        "sku": "datastax-6",
        "version": "latest"
      },
      "scripts": [
        "[uri(parameters('_artifactsLocation'), concat('devops.pub', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('node.sh', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('start-cassandra', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('stop-cassandra', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('cassandra.service', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('cassconf', parameters('_artifactsLocationSasToken')))]"
      ]
    },
    "devOpsOSSettings": {
      "imageReference": {
        "publisher": "datastax",
        "offer": "datastax-enterprise-preview",
        "sku": "datastax-6-opsc",
        "version": "latest"
      },
      "scripts": [
        "[uri(parameters('_artifactsLocation'), concat('devOps.sh', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('devops.pub', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('devops', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('ansible.cfg', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('hosts', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('ansible.cfg', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('dse-directories.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('dse-install.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('ebs-init.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('os-config.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('os-removekeys.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(parameters('_artifactsLocation'), concat('opscenter-install.yml', parameters('_artifactsLocationSasToken')))]"


      ]
    }
  },
  "resources": [
    {
      "apiVersion": "2017-08-01",
      "name": "pid-f8f8d577-b0cc-4dd1-8716-2f6c20161c7b",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "apiVersion": "2017-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "condition": "[equals(parameters('vnetNeworExisting'), 'new')]",
      "location": "[parameters('location')]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetCIDR')]"
          ]
        }  
      },
      "resources": [
        {
          "apiVersion": "2018-10-01",
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[parameters('subnetName')]",
          "dependsOn": [
            "[parameters('vnetName')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnetCIDR')]"
          }
        }
      ]
    },
    {
      "name": "devOpsPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-08-01",
      "condition": "[equals(parameters('publicIpOnDevOps'), 'yes')]",
      "dependsOn": [
         "[parameters('vnetName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('devOpsPubIPTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "domainName": {
            "value": "[variables('devOpsDomainName')]"
          }
        }
      }
    },
    {
      "name": "devOps",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-08-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/devOpsPublicIP",
        "seednodes"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('devOpsTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPResourceId": {
            "value": "[resourceId('Microsoft.Network/publicIPAddresses', 'devops-pubip')]"
          },
          "publicIpOnDevOps": {
            "value": "[parameters('publicIpOnDevOps')]"
          },
          "vmSize": {
            "value": "[parameters('devOpsvmSize')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "datacenterName": {
            "value": "[parameters('datacenterName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "nodeCount": {
            "value": "[parameters('nodeCount')]"
          },
          "osSettings": {
            "value": "[variables('devOpsOSSettings')]"
          },
          "diskSize": {
            "value": "[parameters('diskSize')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "vnetRG": {
            "value": "[parameters('vnetRG')]"
          },
          "privateIPAddress": {
            "value": "[parameters('privateIPAddress')]"
          },
          "subnetCIDR": {
            "value": "[parameters('subnetCIDR')]"
          },
          "deployOPSC": {
            "value": "[parameters('deployOPSC')]"
          }
        }
      }
    },
    {
      "name": "seednodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-08-01",
      "dependsOn": [
          "[parameters('vnetName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createNodesTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "devOpsFQDN": {
            "value": "devOps"
          },
          "uniqueString": {
            "value": "[variables('uniqueString')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "nodeCount": {
            "value": "[parameters('nodeCount')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "diskSize": {
            "value": "[parameters('diskSize')]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "vnetRG": {
            "value": "[parameters('vnetRG')]"
          },
          "publicIpOnNodes": {
            "value": "[parameters('publicIpOnNodes')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "dbSubnetStartAddress": {
            "value": "[parameters('dbSubnetStartAddress')]"

          },
          "vnetCIDR": {
            "value": "[parameters('vnetCIDR')]"
          },
          "subnetCIDR": {
            "value": "[parameters('subnetCIDR')]"
          },
          "nicOffset": {
            "value": "[parameters('nicOffset')]"
          },
          "namespace": {
            "value": "[parameters('datacenterName')]"
          }
        }
      }
    }
  


  ],
  "outputs": { 
    "OpsCenterPubIp": {
      "type": "string",
      "value": "[if(equals(parameters('publicIpOnDevOps'),'yes'), reference('devOpsPublicIP','2017-08-01').outputs.devOpsPubIp.value, 'none')]"
    },
    "OpsCenterURL": {
      "type": "string",
      "value": "[concat('http://', reference('devOpsPublicIP','2017-08-01').outputs.devOpsPubIp.value,':8888')]"
    }
  }
}
